{"version":3,"sources":["utils/fetchClient.ts","api/todos.ts","components/AddTodoForm.tsx","api/users.ts","components/Auth/AuthForm.tsx","components/Auth/AuthContext.tsx","components/Footer.tsx","components/TodoItem.tsx","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","json","client","addTodo","newTodo","updateTodo","id","completed","title","deleteTodo","todoId","AddTodoForm","React","memo","props","useState","todoCreateTitle","setTodoCreateTitle","handleCreateTodo","newTodoField","useRef","useEffect","current","focus","onSubmit","event","preventDefault","type","ref","className","placeholder","value","onChange","target","style","display","getUserByEmail","email","a","users","createUser","name","AuthForm","onLogin","setEmail","setName","needToRegister","setNeedToRegister","loading","setLoading","errorMessage","setErrorMessage","saveUser","user","localStorage","setItem","userData","getItem","parse","error","loadUser","handleSubmit","htmlFor","classNames","disabled","required","e","minLength","AuthContext","createContext","AuthProvider","children","setUser","Provider","Footer","todos","filter","setFilter","deleteAllCompleted","todosLeft","href","selected","onClick","visibility","some","todo","TodoItem","setTodos","setError","activeTodoId","remove","typing","setTyping","input","setInput","update","newTitle","newCompleted","map","currentTodo","myTodo","checked","onBlur","onKeyDown","key","onDoubleClick","App","useContext","isAllTodoDone","setIsAllTodoDone","setActiveTodoId","userId","res","onAddTodo","prevTodos","handlerAddTodo","useCallback","trim","optimisticResponseId","length","createdTodo","getFilteredTodos","filterType","removeTodo","delAllCompletedTodoHandler","forEach","changeStatusTodos","newTodoList","catch","prev","filteredTodos","active","every","hidden","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f97db5d8.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { CreateTodoFragment, Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const addTodo = (newTodo: CreateTodoFragment) => {\n  return client.post<Todo>('/todos', newTodo);\n};\n\nexport const updateTodo = (\n  id: number,\n  completed: boolean | null,\n  title: string | null,\n) => {\n  return client.patch<Todo>(`/todos/${id}`, { title, completed });\n};\n\nexport const deleteTodo = (todoId: number) => {\n  return client.delete(`/todos/${todoId}`);\n};\n","import React, {\n  FormEvent, useEffect, useRef, useState,\n} from 'react';\n\ninterface Props {\n  handleCreateTodo: (title: string) => void;\n}\nexport const AddTodoForm: React.FC<Props> = React.memo((props) => {\n  const [todoCreateTitle, setTodoCreateTitle] = useState('');\n  const { handleCreateTodo } = props;\n  const newTodoField = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (newTodoField.current) {\n      newTodoField.current.focus();\n    }\n  }, []);\n\n  const handleSubmitNewTodo = (event: FormEvent) => {\n    event.preventDefault();\n    handleCreateTodo(todoCreateTitle);\n    setTodoCreateTitle('');\n  };\n\n  return (\n    <form onSubmit={handleSubmitNewTodo}>\n      <input\n        data-cy=\"NewTodoField\"\n        type=\"text\"\n        ref={newTodoField}\n        className=\"todoapp__new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={todoCreateTitle}\n        onChange={(event) => setTodoCreateTitle(event.target.value)}\n      />\n      <button type=\"submit\" aria-label=\"Save\" style={{ display: 'none' }} />\n    </form>\n  );\n});\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { createUser, getUserByEmail } from '../../api/users';\nimport { User } from '../../types/User';\n\nexport type Props = {\n  onLogin: (user: User) => void,\n};\n\nexport const AuthForm: React.FC<Props> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const saveUser = (user: User) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    onLogin(user);\n  };\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n\n    if (!userData) {\n      return;\n    }\n\n    try {\n      const user = JSON.parse(userData) as User;\n\n      onLogin(user);\n    } catch (error) {\n      // Need to login\n    }\n  }, []);\n\n  const loadUser = async () => {\n    const user = await getUserByEmail(email);\n\n    if (user) {\n      saveUser(user);\n    } else {\n      setNeedToRegister(true);\n    }\n  };\n\n  const registerUser = () => {\n    return createUser({ name, email })\n      .then(saveUser);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrorMessage('');\n    setLoading(true);\n\n    try {\n      if (needToRegister) {\n        await registerUser();\n      } else {\n        await loadUser();\n      }\n    } catch (error) {\n      setErrorMessage('Something went wrtong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"box mt-5\">\n      <h1 className=\"title is-3\">\n        {needToRegister ? 'You need to register' : 'Log in to open todos'}\n      </h1>\n\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"user-email\">\n          Email\n        </label>\n\n        <div\n          className={classNames('control has-icons-left', {\n            'is-loading': loading,\n          })}\n        >\n          <input\n            type=\"email\"\n            id=\"user-email\"\n            className={classNames('input', {\n              'is-danger': !needToRegister && errorMessage,\n            })}\n            placeholder=\"Enter your email\"\n            disabled={loading || needToRegister}\n            value={email}\n            required\n            onChange={e => setEmail(e.target.value)}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n        </div>\n\n        {!needToRegister && errorMessage && (\n          <p className=\"help is-danger\">{errorMessage}</p>\n        )}\n      </div>\n\n      {needToRegister && (\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"user-name\">\n            Your Name\n          </label>\n\n          <div\n            className={classNames('control has-icons-left', {\n              'is-loading': loading,\n            })}\n          >\n            <input\n              type=\"text\"\n              id=\"user-name\"\n              className={classNames('input', {\n                'is-danger': needToRegister && errorMessage,\n              })}\n              placeholder=\"Enter your name\"\n              required\n              minLength={4}\n              disabled={loading}\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\" />\n            </span>\n          </div>\n\n          {needToRegister && errorMessage && (\n            <p className=\"help is-danger\">{errorMessage}</p>\n          )}\n        </div>\n      )}\n\n      <div className=\"field\">\n        <button\n          type=\"submit\"\n          className={classNames('button is-primary', {\n            'is-loading': loading,\n          })}\n        >\n          {needToRegister ? 'Register' : 'Login'}\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { User } from '../../types/User';\nimport { AuthForm } from './AuthForm';\n\nexport const AuthContext = React.createContext<User | null>(null);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AuthProvider: React.FC<Props> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  if (!user) {\n    return <AuthForm onLogin={setUser} />;\n  }\n\n  return (\n    <AuthContext.Provider value={user}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../types/Todo';\n\ntype FilteredTodos = 'all' | 'completed' | 'active';\n\ninterface Props {\n  todos: Todo[];\n  filter: FilteredTodos,\n  setFilter(filter: FilteredTodos): void,\n  deleteAllCompleted(): void,\n  todosLeft: number,\n}\n\nexport const Footer: React.FC<Props> = (\n  {\n    todos, filter, setFilter, deleteAllCompleted, todosLeft,\n  },\n) => {\n  return (\n    <>\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {`${todosLeft} items left`}\n      </span>\n\n      <nav className=\"filter\" data-cy=\"Filter\">\n        <a\n          data-cy=\"FilterLinkAll\"\n          href=\"#/\"\n          className={classNames(\n            'filter__link',\n            {\n              selected: filter === 'all',\n            },\n          )}\n          onClick={event => {\n            event.preventDefault();\n\n            if (filter !== 'all') {\n              setFilter('all');\n            }\n          }}\n        >\n          All\n        </a>\n\n        <a\n          data-cy=\"FilterLinkActive\"\n          href=\"#/active\"\n          className={classNames(\n            'filter__link',\n            {\n              selected: filter === 'active',\n            },\n          )}\n          onClick={event => {\n            event.preventDefault();\n\n            if (filter !== 'active') {\n              setFilter('active');\n            }\n          }}\n        >\n          Active\n        </a>\n        <a\n          data-cy=\"FilterLinkCompleted\"\n          href=\"#/completed\"\n          className={classNames(\n            'filter__link',\n            {\n              selected: filter === 'completed',\n            },\n          )}\n          onClick={event => {\n            event.preventDefault();\n\n            if (filter !== 'completed') {\n              setFilter('completed');\n            }\n          }}\n        >\n          Completed\n        </a>\n      </nav>\n\n      <button\n        data-cy=\"ClearCompletedButton\"\n        type=\"button\"\n        className=\"todoapp__clear-completed\"\n        onClick={() => deleteAllCompleted()}\n        style={{\n          visibility: todos.some(todo => todo.completed)\n            ? 'visible'\n            : 'hidden',\n        }}\n      >\n        Clear completed\n      </button>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, {\n  FC, useState,\n} from 'react';\nimport classNames from 'classnames';\nimport { updateTodo } from '../api/todos';\nimport { Todo } from '../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  todos: Todo[],\n  setTodos(todos: Todo[]): void,\n  setError(error: string): void,\n  loading: boolean,\n  activeTodoId: number | null,\n  remove(todoId: number): void,\n}\n\nexport const TodoItem: FC<Props> = ({\n  todo,\n  todos,\n  setTodos,\n  setError,\n  loading,\n  activeTodoId,\n  remove,\n}) => {\n  const { title, id, completed } = todo;\n\n  const [typing, setTyping] = useState(false);\n  const [input, setInput] = useState('');\n\n  const update = async (newTitle: string, newCompleted: boolean) => {\n    setTodos(todos.map(currentTodo => {\n      if (currentTodo.id === id) {\n        return {\n          ...currentTodo,\n          completed: newCompleted,\n          title: newTitle,\n        };\n      }\n\n      return { ...currentTodo };\n    }));\n\n    try {\n      await updateTodo(id, newCompleted, newTitle);\n\n      const myTodo = todos.map(currentTodo => {\n        if (currentTodo.id === id) {\n          return {\n            ...currentTodo,\n            title: newTitle,\n            completed: newCompleted,\n          };\n        }\n\n        return { ...currentTodo };\n      });\n\n      setTodos(myTodo);\n    } catch {\n      setError('update');\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent | React.FocusEvent): void => {\n    event.preventDefault();\n\n    if (!input) {\n      remove(id);\n\n      return;\n    }\n\n    setError('');\n\n    if (input !== todo.title) {\n      update(input, todo.completed);\n    }\n\n    setTyping(false);\n  };\n\n  return (\n    <div\n      data-cy=\"Todo\"\n      className={classNames('todo',\n        { completed })}\n    >\n      <label className=\"todo__status-label\">\n        <input\n          data-cy=\"TodoStatus\"\n          type=\"checkbox\"\n          className=\"todo__status\"\n          checked={completed}\n          onChange={() => update(title, !completed)}\n        />\n      </label>\n\n      {typing\n        ? (\n          <form\n            onBlur={handleSubmit}\n            onSubmit={handleSubmit}\n          >\n            <input\n              data-cy=\"NewTodoField\"\n              type=\"text\"\n              className=\"todoapp__new-todo\"\n              placeholder=\"Empty todo will be deleted\"\n              value={input}\n              onChange={event => setInput(event.target.value)}\n              onKeyDown={event => {\n                if (event.key === 'Escape') {\n                  setInput('');\n                  setTyping(false);\n                }\n              }}\n            />\n          </form>\n        )\n        : (\n          <>\n            <span\n              data-cy=\"TodoTitle\"\n              className=\"todo__title\"\n              onDoubleClick={() => {\n                setInput(title);\n                setTyping(true);\n              }}\n            >\n              {title}\n            </span>\n\n            <button\n              type=\"button\"\n              className=\"todo__remove\"\n              data-cy=\"TodoDeleteButton\"\n              onClick={() => remove(id)}\n            >\n              x\n            </button>\n          </>\n        )}\n\n      <div\n        data-cy=\"TodoLoader\"\n        className={classNames(\n          'modal overlay',\n          { 'is-active': loading && id === activeTodoId },\n        )}\n      >\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport classNames from 'classnames';\nimport React, {\n  useCallback, useContext, useEffect, useState,\n} from 'react';\nimport {\n  addTodo, deleteTodo, getTodos, updateTodo,\n} from './api/todos';\nimport { AddTodoForm } from './components/AddTodoForm';\nimport { AuthContext } from './components/Auth/AuthContext';\nimport { Footer } from './components/Footer';\nimport { TodoItem } from './components/TodoItem';\nimport { Todo } from './types/Todo';\n\ntype FilteredTodos = 'all' | 'active' | 'completed';\n\nexport const App: React.FC = () => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const user = useContext(AuthContext);\n\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState<FilteredTodos>('all');\n  const [error, setError] = useState('');\n  const [isAllTodoDone, setIsAllTodoDone] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [activeTodoId, setActiveTodoId] = useState<number | null>(null);\n\n  useEffect(() => {\n    if (user) {\n      getTodos(user.id)\n        .then((res) => {\n          setTodos(res);\n        });\n    }\n  }, [user]);\n\n  const onAddTodo = (todo: Todo) => {\n    setTodos((prevTodos) => (\n      [...prevTodos, todo]\n    ));\n  };\n\n  const handlerAddTodo = useCallback(async (title: string) => {\n    setLoading(true);\n\n    if (!user) {\n      return;\n    }\n\n    if (!title.trim()) {\n      setError('Please add title');\n\n      return;\n    }\n\n    const optimisticResponseId = -(todos.length);\n\n    const newTodo = {\n      id: optimisticResponseId,\n      userId: user.id,\n      title,\n      completed: false,\n    };\n\n    onAddTodo(newTodo);\n    setActiveTodoId(optimisticResponseId);\n\n    try {\n      const createdTodo = await addTodo({\n        title,\n        userId: user.id,\n        completed: false,\n      });\n\n      setTodos(prevTodos => prevTodos.map(todo => {\n        if (todo.id === optimisticResponseId) {\n          return createdTodo;\n        }\n\n        return todo;\n      }));\n    } catch {\n      setTodos(\n        prevTodos => prevTodos.filter(todo => todo.id !== optimisticResponseId),\n      );\n\n      setError('Unable to add a todo');\n    }\n\n    setLoading(false);\n    setError('');\n  }, [user, todos.length]);\n\n  const getFilteredTodos = useCallback((filterType: FilteredTodos) => {\n    switch (filterType) {\n      case 'active':\n        return todos.filter(todo => !todo.completed);\n      case 'completed':\n        return todos.filter(todo => todo.completed);\n      default:\n        return todos;\n    }\n  }, [todos]);\n\n  const removeTodo = useCallback(async (todoId: number) => {\n    setLoading(true);\n    setActiveTodoId(todoId);\n\n    if (!user) {\n      return;\n    }\n\n    try {\n      await deleteTodo(todoId);\n      setTodos(prevTodos => prevTodos.filter(todo => todo.id !== todoId));\n    } catch {\n      setError('Unable to delete a todo');\n    }\n\n    setLoading(false);\n  }, [user]);\n\n  const delAllCompletedTodoHandler = useCallback(() => {\n    todos.forEach(todo => {\n      if (todo.completed) {\n        removeTodo(todo.id);\n      }\n    });\n  }, [removeTodo, todos]);\n\n  const changeStatusTodos = useCallback(() => {\n    const newTodoList = [...todos].map(todo => {\n      updateTodo(todo.id, !isAllTodoDone, todo.title)\n        .catch(() => setError('Unable to update a todo'));\n\n      return {\n        ...todo,\n        completed: !isAllTodoDone,\n      };\n    });\n\n    setTodos(newTodoList);\n    setIsAllTodoDone((prev) => !prev);\n  }, [isAllTodoDone, todos]);\n\n  const filteredTodos = getFilteredTodos(filter);\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <header className=\"todoapp__header\">\n          {todos.length > 0 && (\n            <button\n              data-cy=\"ToggleAllButton\"\n              type=\"button\"\n              className={classNames(\n                'todoapp__toggle-all',\n                {\n                  active: todos.length && todos.every(todo => todo.completed),\n                },\n              )}\n              onClick={() => changeStatusTodos()}\n            />\n          )}\n\n          <AddTodoForm handleCreateTodo={handlerAddTodo} />\n        </header>\n\n        <section className=\"todoapp__main\" data-cy=\"TodoList\">\n          {filteredTodos.map(todo => (\n            <TodoItem\n              todo={todo}\n              todos={todos}\n              setTodos={setTodos}\n              key={todo.id}\n              setError={setError}\n              loading={loading}\n              activeTodoId={activeTodoId}\n              remove={removeTodo}\n            />\n          ))}\n        </section>\n\n        <footer className=\"todoapp__footer\" data-cy=\"Footer\">\n          <Footer\n            todos={todos}\n            todosLeft={todos.filter(todo => !todo.completed).length}\n            filter={filter}\n            setFilter={setFilter}\n            deleteAllCompleted={delAllCompletedTodoHandler}\n          />\n        </footer>\n      </div>\n\n      <div\n        data-cy=\"ErrorNotification\"\n        className={classNames(\n          'notification',\n          'is-danger',\n          'is-light',\n          'has-text-weight-normal',\n          {\n            hidden: error === '',\n          },\n        )}\n      >\n        <button\n          data-cy=\"HideErrorButton\"\n          type=\"button\"\n          className=\"delete\"\n          onClick={() => setError('')}\n        />\n\n        {error}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable import/no-unresolved */\nimport React from 'react';\n// import { createRoot } from 'react-dom/client';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\nimport { AuthProvider } from './components/Auth/AuthContext';\n\n// const Root = () => (\n//   <AuthProvider>\n//     <App />\n//   </AuthProvider>\n// );\nReactDOM.render(\n  <AuthProvider>\n    <App />\n  </AuthProvider>,\n  document.getElementById('root'),\n);\n// createRoot(document.getElementById('root') as HTMLDivElement)\n//   .render(<Root />);\n"],"sourceRoot":""}